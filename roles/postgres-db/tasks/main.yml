---
- name: "PostgreSQL packages are installed"
  package:
    name: "{{ item }}"
    state: "installed"
  with_items:
    - "postgresql"
    - "python-psycopg2"


- name: "role is created."
  postgresql_user:
    name: "{{ postgres_user }}"
    password: "{{ postgres_password }}"
    encrypted: yes
    state: present
    role_attr_flags: CREATEDB
  become_user: postgres
  become: yes

- name: "database is created."
  postgresql_db:
    name: "{{ postgres_database }}"
    state: present
    owner: "{{ postgres_user }}"
  become_user: postgres
  become: yes

- name: generate ssh key for site user
  when: backup_host is defined
  user:
    name: "{{ site }}"
    generate_ssh_key: True
    ssh_key_type: ed25519
  notify: 
    - print ssh key

- name: install backup script
  when: backup_host is defined
  template:
    src: backup.sh.j2
    dest: /var/www/{{ site }}/backup.postgres.sh
    owner: "{{ site }}"
    group: "{{ site }}"
    mode: "770"

- name: "add backup server to known hosts"
  lineinfile:
    dest: "/var/www/{{ site }}/.ssh/known_hosts"
    create: yes
    state: present
    line: "{{ lookup('pipe', 'ssh-keyscan {{ backup_host }}') }}"
    regexp: "^{{ backup_host }}"
    owner: "{{ site }}"
    group: "{{ site }}"

- name: setup backup password file
  when: backup_host is defined
  copy:
    dest: "/var/www/{{ site }}/backup.key"  
    content: "{{ backup_password }}"
    mode: "600"
    owner: "{{ site }}"

- name: create backup cronjob
  cron:
    name: "{{ site }} | backup"
    minute: "0"
    hour: "3"
    job: "cd /var/www/{{ site }}/ && ./backup.postgres.sh > /dev/null"
    user: "{{ site }}"
