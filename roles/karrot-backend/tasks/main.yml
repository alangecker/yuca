---

#------------------------------------------------------------------
# database

- postgresql_db:
    name: "{{ postgresql_database }}"
    encoding: UTF-8
  become: true
  become_user: postgres

- postgresql_user:
    db: "{{ postgresql_database }}"
    name: "{{ postgresql_user }}"
    password: "{{ postgresql_password }}"
    priv: ALL
  become: true
  become_user: postgres

#------------------------------------------------------------------
# nginx config

- name: nginx config
  template:
    src: nginx.j2
    dest: /etc/nginx/sites-available/{{ site }}
  notify:
    - reload nginx

- name: nginx sites-enabled symlink
  file:
    src: /etc/nginx/sites-available/{{ site }}
    dest: /etc/nginx/sites-enabled/{{ site }}
    state: link
  notify:
    - reload nginx

#------------------------------------------------------------------
# initialize www directory

- name: git repo
  git:
    repo: https://github.com/yunity/foodsaving-backend.git
    dest: /var/www/{{ site }}/www
    update: no

- name: virtualenv
  command: >
    virtualenv
      --no-setuptools
      --python=python3
      --no-site-packages
      /var/www/{{ site }}/www/env
  args:
    creates: /var/www/{{ site }}/www/env

- name: deploy ownership
  file:
    dest: /var/www/{{ site }}/www
    state: directory
    owner: deploy
    group: deploy

#------------------------------------------------------------------
# django settings

- name: django local settings
  template:
    src: local_settings.py.j2
    dest: /var/www/{{ site }}/www/config/local_settings.py
  notify:
    - restart app

#------------------------------------------------------------------
# systemd servics

- name: systemd daphne service
  template:
    src: systemd.daphne.service.j2
    dest: /etc/systemd/system/{{ site }}-daphne.service
  notify:
    - reload systemd daemon
    - restart daphne

- name: systemd worker target
  template:
    src: systemd.worker.target.j2
    dest: /etc/systemd/system/{{ site }}-worker.target
  notify:
    - reload systemd daemon
    - restart workers

- name: systemd worker service
  template:
    src: systemd.worker.service.j2
    dest: /etc/systemd/system/{{ site }}-worker@.service
  notify:
    - reload systemd daemon
    - restart workers

- name: systemd enable daphne
  systemd:
    name: "{{ site }}-daphne.service"
    state: started
    enabled: yes

- name: systemd enable workers
  systemd:
    name: "{{ site }}-worker.target"
    state: started
    enabled: yes